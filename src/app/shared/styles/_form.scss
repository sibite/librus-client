@use 'vars';
@use 'misc';

$el-height: 44px;
$el-padding: 12px;
$el-line-height: #{$el-height - $el-padding*2};
$el-ver-margin: 8px;
$el-border-width: 1px;
$group-ver-margin: 30px;

@mixin common-form-element-styles($no-border: false) {
  box-sizing: border-box;
  width: 100%;
  padding: $el-padding;
  line-height: $el-line-height;
  font: {
    family: 'Lato', Roboto, sans-serif;
    size: 1em;
  }
  @if ($no-border) {
    min-height: calc(#{$el-height} + 2 * #{$el-border-width});
    border: none;
  }
  @else {
    min-height: $el-height;
    border: $el-border-width solid var(--form-el-border-color);
  }
  border-radius: vars.$border-radius;
}

.ui.form {
  text-align: left;
}

.ui.form-group {
  @include misc.clearfix();
  margin-top: $group-ver-margin;
  margin-bottom: $group-ver-margin;

  &:first-child {
    margin-top: 0;
  }
  &:last-child {
    margin-bottom: 0;
  }
}

.ui.form-control, .ui.form-control:-webkit-autofill {
  @include misc.fast-transition();
  @include common-form-element-styles();

  margin: {
    top: $el-ver-margin;
    bottom: $el-ver-margin;
  }
  color: var(--form-el-text-color);
  background-color: var(--form-el-bg-color);
  box-shadow: 0px 1px 2px 0px rgb(0, 0, 0, 10%) inset;

  &:focus {
    background-color: var(--form-el-bg-color-focus);
    border-color: vars.$accent;
  }

  &.ng-invalid.ng-touched {
    border-color: vars.$danger;
  }

  &[disabled] {
    transition: none;
    opacity: 0.5;
  }
}

.ui.form-error {
  display: block;
  clear: both;
  color: vars.$danger;
  font-size: 0.8em;
  margin-top: 0px;
  margin-bottom: 12px;
}

.ui.button {
  @include misc.fast-transition();
  @include common-form-element-styles($no-border: true);
  cursor: pointer;
  background-color: var(--btn-color-default);
  color: var(--btn-font-color-default);
  border-radius: vars.$border-radius;
  font-weight: bold;
  @include misc.fast-transition();

  &.primary {
    color: vars.$accent-contrast;
    background-color: vars.$accent;
  }

  &.transparent {
    color: var(--text-color-1);
    background-color: transparent;
  }

  &[disabled] {
    cursor: auto;
    transition: none;
    &:not(.loading) {
      opacity: 0.5;
    }
  }

  &.loading {
    color: transparent;
    position: relative;

    &:after {
      $size: 26px;
      $width: 3px;
      $inner-size: #{$size - $width * 2};
      position: absolute;
      content: '';
      top: calc(50% - #{$size / 2});
      left: calc(50% - #{$size / 2});
      width: $inner-size;
      height: $inner-size;
      animation: button-spinner 0.6s linear;
      animation-iteration-count: infinite;
      box-shadow: 0 0 0 1px transparent;
      border: {
        color: #ffffff transparent transparent #ffffff;
        style: solid;
        width: $width;
        radius: 100%;
      }
    }
  }
}

@keyframes button-spinner {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.ui.label {
  display: block;
  margin-top: $el-ver-margin;
  clear: both;
  color: var(--form-el-text-color);
  font-size: 0.8em;
}
