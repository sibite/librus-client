@use 'vars';
@use 'misc';

$el-height: 44px;
$el-padding: 12px;
$el-line-height: #{$el-height - $el-padding*2};
$el-ver-margin: 8px;
$el-border-width: 1px;
$group-ver-margin: 30px;

@mixin common-form-element-styles($no-border: false) {
  box-sizing: border-box;
  width: 100%;
  padding: $el-padding;
  line-height: $el-line-height;
  font: {
    family: 'Lato', Roboto, sans-serif;
    size: 1.1rem;
  }
  @if ($no-border) {
    min-height: calc(#{$el-height} + 2 * #{$el-border-width});
    border: none;
  }
  @else {
    min-height: $el-height;
    border: $el-border-width solid var(--form-el-border-color);
  }
  border-radius: vars.$border-radius;
}

.ui.form {
  text-align: left;
}

.ui.form-group {
  @include misc.clearfix();
  margin-top: $group-ver-margin;
  margin-bottom: $group-ver-margin;

  &:first-child {
    margin-top: 0;
  }
  &:last-child {
    margin-bottom: 0;
  }
}

.ui.form-control, .ui.form-control:-webkit-autofill {
  @include misc.fast-transition();
  @include common-form-element-styles();

  margin: {
    top: $el-ver-margin;
    bottom: $el-ver-margin;
  }
  color: var(--form-el-text-color);
  background-color: var(--form-el-bg-color);
  box-shadow: 0px 1px 2px 0px rgb(0, 0, 0, 10%) inset;

  &:focus {
    background-color: var(--form-el-bg-color-focus);
    border-color: vars.$accent;
  }

  &.ng-invalid.ng-touched {
    border-color: vars.$danger;
  }

  &[disabled] {
    transition: none;
    opacity: 0.5;
  }
}

.ui.form-error {
  display: block;
  clear: both;
  color: vars.$danger;
  font-size: 1rem;
  margin-top: 0px;
  margin-bottom: 12px;
}

.ui.button {
  @include misc.fast-transition();
  @include common-form-element-styles($no-border: true);
  cursor: pointer;
  background-color: var(--btn-color-default);
  color: var(--btn-font-color-default);
  border-radius: vars.$border-radius;
  font-weight: bold;
  @include misc.fast-transition();

  &.primary {
    color: vars.$accent-contrast;
    background-color: vars.$accent;
  }

  &.transparent {
    color: var(--text-color-1);
    background-color: transparent;
  }

  &[disabled] {
    cursor: auto;
    transition: none;
    &:not(.loading) {
      opacity: 0.5;
    }
  }

  &.loading {
    color: transparent;
    position: relative;
  }

  &.loading::after {
    @include vars.loading-spinner(26px, 3px, #ffffff, true);
  }
}

@keyframes button-spinner {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.ui.label {
  display: block;
  margin-top: $el-ver-margin;
  clear: both;
  color: var(--form-el-text-color);
  font-size: 1rem;
}

// Author: Aaron Iker

input[type="radio"], input[type="checkbox"] {
  --active: var(--accent);
  --active-inner: #fff;
  --border: var(--accent-d2);
  --border-hover: var(--accent);
  --background: #fff;
  --disabled: #F8F8F8;
  --disabled-inner: #E1E6F9;
  -webkit-appearance: none;
  -moz-appearance: none;
  height: 21px;
  outline: none;
  display: inline-block;
  vertical-align: top;
  position: relative;
  margin: 0;
  margin-right: 7px;
  cursor: pointer;
  border: 1px solid var(--bc, var(--border));
  background: var(--b, var(--background));
  transition: background .3s, border-color .3s, box-shadow .2s;

  & ~ * {
    cursor: pointer;
    line-height: 21px;
  }

  font: {
    family: inherit;
  }

  &:after {
    content: '';
    display: block;
    left: 0;
    top: 0;
    position: absolute;
    transition: transform var(--d-t, .3s) var(--d-t-e, ease), opacity var(--d-o, .2s);
  }
  &:checked {
    --b: var(--active);
    --bc: var(--active);
    --d-o: .3s;
    --d-t: .6s;
    --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
  }
  &:disabled {
    --b: var(--disabled);
    cursor: not-allowed;
    opacity: .9;
    &:checked {
      --b: var(--disabled-inner);
      --bc: var(--border);
    }
    & + label {
      cursor: not-allowed;
    }
  }
  &:hover {
    &:not(:checked) {
      &:not(:disabled) {
        --bc: var(--border-hover);
      }
    }
  }
  &:not(.switch) {
    width: 21px;
    &:after {
      opacity: var(--o, 0);
    }
    &:checked {
      --o: 1;
    }
  }
  & + label {
    font-size: 14px;
    line-height: 21px;
    display: inline-block;
    vertical-align: top;
    cursor: pointer;
    margin-left: 4px;
  }
}

input[type="radio"] {
  border-radius: 50%;
  &:after {
    width: 19px;
    height: 19px;
    border-radius: 50%;
    background: var(--active-inner);
    opacity: 0;
    transform: scale(var(--s, .7));
  }
  &:checked {
    --s: .5;
  }
}
